{"version":3,"sources":["sounds/hi-hat.mp3","sounds/china-cymbal.mp3","sounds/bass-drum.mp3","sounds/floor-tom.mp3","sounds/snare-drum.mp3","sounds/medium-tom.mp3","sounds/crash-cymbal.mp3","sounds/ride-cymbal.mp3","sounds/splash-cymbal.mp3","components/DrumPad.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","props","audio","useRef","container","className","id","triggerKey","ref","onClick","current","currentTime","play","onMouseDown","style","backgroundColor","setDisplay","keyToSound","find","item","key","description","onMouseUp","src","sound","bassDrum","floor","snare","medium","china","crash","ride","splash","hiHat","App","useState","display","useEffect","document","addEventListener","event","drumPad","querySelector","toUpperCase","click","handleDisplay","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8NAAe,G,MAAA,IAA0B,oCCA1B,MAA0B,yCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,yCCA1B,MAA0B,wCCA1B,MAA0B,0CCoC1BA,EAhCC,SAAAC,GACd,IAAMC,EAAQC,iBAAO,MACfC,EAAYD,iBAAO,MAEzB,OACE,sBACEE,UAAU,WACVC,GAAE,UAAKL,EAAMM,WAAX,cACFC,IAAKJ,EACLK,QAAS,WACPP,EAAMQ,QAAQC,YAAc,EAC5BT,EAAMQ,QAAQE,QAEhBC,YAAa,WACXT,EAAUM,QAAQI,MAAMC,gBAAkB,UAC1Cd,EAAMe,WACJC,EAAWC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQnB,EAAMM,cAAYc,cAG3DC,UAAW,kBAAOlB,EAAUM,QAAQI,MAAMC,gBAAkB,IAd9D,UAgBE,uBACET,GAAIL,EAAMM,WACVF,UAAU,OACVkB,IAAKtB,EAAMuB,MACXhB,IAAKN,IAEND,EAAMM,eChBAU,EAAa,CACxB,CAAEG,IAAK,IAAKI,MAAOC,EAAUJ,YAAa,aAC1C,CAAED,IAAK,IAAKI,MAAOE,EAAOL,YAAa,aACvC,CAAED,IAAK,IAAKI,MAAOG,EAAON,YAAa,cACvC,CAAED,IAAK,IAAKI,MAAOI,EAAQP,YAAa,cACxC,CAAED,IAAK,IAAKI,MAAOK,EAAOR,YAAa,gBACvC,CAAED,IAAK,IAAKI,MAAOM,EAAOT,YAAa,gBACvC,CAAED,IAAK,IAAKI,MAAOO,EAAMV,YAAa,eACtC,CAAED,IAAK,IAAKI,MAAOQ,EAAQX,YAAa,gBACxC,CAAED,IAAK,IAAKI,MAAOS,EAAOZ,YAAa,WAuD1Ba,MApDf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGpB,EADH,KAGbqB,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAAAC,GACnC,IAAMC,EAAUH,SAASI,cAAT,WACVF,EAAMpB,IAAIuB,cADA,eAIZF,IACFA,EAAQG,QACR5B,EACEC,EAAWC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQoB,EAAMpB,IAAIuB,iBAC5CtB,aAELoB,EAAQ3B,MAAMC,gBAAkB,cAIpCuB,SAASC,iBAAiB,SAAS,SAAAC,GACjC,IAAMC,EAAUH,SAASI,cAAT,WACVF,EAAMpB,IAAIuB,cADA,eAIZF,IACFA,EAAQ3B,MAAMC,gBAAkB,SAGnC,IAEH,IAAM8B,EAAgB,SAAAxB,GACpBL,EAAWK,IAGb,OACE,sBAAKhB,UAAU,MAAMC,GAAG,eAAxB,UACE,8CACA,qBAAKA,GAAG,UAAR,SAAmB8B,IACnB,qBAAK/B,UAAU,qBAAf,SACGY,EAAW6B,KAAI,SAAA3B,GAAI,OAClB,cAAC,EAAD,CAEEZ,WAAYY,EAAKC,IACjBI,MAAOL,EAAKK,MACZR,WAAY6B,GAHP1B,EAAKC,cCxDP2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.f5ff3a70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hi-hat.e424264c.mp3\";","export default __webpack_public_path__ + \"static/media/china-cymbal.9ab8c388.mp3\";","export default __webpack_public_path__ + \"static/media/bass-drum.3d23d571.mp3\";","export default __webpack_public_path__ + \"static/media/floor-tom.6237e9d7.mp3\";","export default __webpack_public_path__ + \"static/media/snare-drum.548f262c.mp3\";","export default __webpack_public_path__ + \"static/media/medium-tom.4314cf5e.mp3\";","export default __webpack_public_path__ + \"static/media/crash-cymbal.5e7ecfc1.mp3\";","export default __webpack_public_path__ + \"static/media/ride-cymbal.8a556658.mp3\";","export default __webpack_public_path__ + \"static/media/splash-cymbal.b26b3f70.mp3\";","import { useRef } from 'react';\n\nimport { keyToSound } from '../App';\n\nconst DrumPad = props => {\n  const audio = useRef(null);\n  const container = useRef(null);\n\n  return (\n    <div\n      className=\"drum-pad\"\n      id={`${props.triggerKey}-container`}\n      ref={container}\n      onClick={() => {\n        audio.current.currentTime = 0;\n        audio.current.play();\n      }}\n      onMouseDown={() => {\n        container.current.style.backgroundColor = '#8dffcd';\n        props.setDisplay(\n          keyToSound.find(item => item.key === props.triggerKey).description,\n        );\n      }}\n      onMouseUp={() => (container.current.style.backgroundColor = '')}\n    >\n      <audio\n        id={props.triggerKey}\n        className=\"clip\"\n        src={props.sound}\n        ref={audio}\n      ></audio>\n      {props.triggerKey}\n    </div>\n  );\n};\n\nexport default DrumPad;\n","import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport hiHat from './sounds/hi-hat.mp3';\nimport china from './sounds/china-cymbal.mp3';\nimport bassDrum from './sounds/bass-drum.mp3';\nimport floor from './sounds/floor-tom.mp3';\nimport snare from './sounds/snare-drum.mp3';\nimport medium from './sounds/medium-tom.mp3';\nimport crash from './sounds/crash-cymbal.mp3';\nimport ride from './sounds/ride-cymbal.mp3';\nimport splash from './sounds/splash-cymbal.mp3';\n\nimport DrumPad from './components/DrumPad';\n\nexport const keyToSound = [\n  { key: 'Q', sound: bassDrum, description: 'Bass Drum' },\n  { key: 'W', sound: floor, description: 'Floor tom' },\n  { key: 'E', sound: snare, description: 'Snare drum' },\n  { key: 'A', sound: medium, description: 'Medium tom' },\n  { key: 'S', sound: china, description: 'China cymbal' },\n  { key: 'D', sound: crash, description: 'Crash cymbal' },\n  { key: 'Z', sound: ride, description: 'Ride cymbal' },\n  { key: 'X', sound: splash, description: 'Splay cymbal' },\n  { key: 'C', sound: hiHat, description: 'Hi-Hat' },\n];\n\nfunction App() {\n  const [display, setDisplay] = useState('');\n\n  useEffect(() => {\n    document.addEventListener('keydown', event => {\n      const drumPad = document.querySelector(\n        `#${event.key.toUpperCase()}-container`,\n      );\n\n      if (drumPad) {\n        drumPad.click();\n        setDisplay(\n          keyToSound.find(item => item.key === event.key.toUpperCase())\n            .description,\n        );\n        drumPad.style.backgroundColor = '#8dffcd';\n      }\n    });\n\n    document.addEventListener('keyup', event => {\n      const drumPad = document.querySelector(\n        `#${event.key.toUpperCase()}-container`,\n      );\n\n      if (drumPad) {\n        drumPad.style.backgroundColor = '';\n      }\n    });\n  }, []);\n\n  const handleDisplay = description => {\n    setDisplay(description);\n  };\n\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <h1>Drum Machine</h1>\n      <div id=\"display\">{display}</div>\n      <div className=\"drum-pad-container\">\n        {keyToSound.map(item => (\n          <DrumPad\n            key={item.key}\n            triggerKey={item.key}\n            sound={item.sound}\n            setDisplay={handleDisplay}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}